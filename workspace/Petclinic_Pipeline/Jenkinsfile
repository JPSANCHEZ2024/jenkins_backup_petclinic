pipeline {
    agent any
    tools{
        maven "MAVEN"
    }

    stages {
        stage ('Start SonarQube'){
            agent {label 'target3'}
            steps {
                echo 'SonarQube Start'
                sh '''
                    if sudo docker ps --filter "name=sonarqube" >/dev/null; then
                        sudo docker start sonarqube
                    fi
                '''
            }
        }

        stage('Scan') {
            agent {label 'target3'}
            steps {
                echo 'Scan Start'
                script {
                    withSonarQubeEnv('sonarqube1') {
                        sh "mvn clean compile sonar:sonar"
                    }
                }
            }
        }  

        stage("Quality gate"){
            agent {label 'target3'}
            steps {
                waitForQualityGate abortPipeline: true
            }
        }

        stage('Verification') {
            agent { label 'target1'}
            steps {
                sh 'whoami'
                sh 'pwd'
            }
        }

        stage('Maven Install') {
            agent { label 'target1'}
            steps {
                sh 'mvn clean install'
            }
        }
        
        stage('Docker Build') {
            agent { label 'target1'}
            steps {
                sh 'sudo docker build -t jpsanchez2024/petclinic:latest .'
            }
        }

        stage('Docker Push') {
    	      agent  { label 'target1'}
            steps {
      	        withCredentials([usernamePassword(credentialsId: 'dockerhub', passwordVariable: 'omar82432024',    usernameVariable: 'jpsanchez2024')]) {
        	          sh "sudo docker login -u 'jpsanchez2024' -p 'omar82432024'"
                    sh 'sudo docker push jpsanchez2024/petclinic:latest'
                }
            }
        }
    }

     post {
        success {
            echo "Pipeline successfully completed. Next pipeline launched..."
            build 'Petclinic_Pull_Docker'
        }
    }
}